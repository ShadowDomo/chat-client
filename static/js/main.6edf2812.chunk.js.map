{"version":3,"sources":["DetailsContext.tsx","RoomInput.tsx","Message.tsx","Room.tsx","App.tsx","index.tsx"],"names":["DetailsContext","createContext","RoomInput","useState","localUsername","setLocalUsername","localRoomCode","setLocalRoomCode","useContext","usernames","setUsername","room","setRoomCode","history","useHistory","className","type","value","onChange","e","target","onClick","push","Message","message","username","status","Date","parseInt","time","toLocaleTimeString","toString","content","Room","roomCode","messages","setMessages","setMessage","socket","setSocket","typingUsers","setTypingUsers","emptyDiv","useRef","addMessage","currentMessages","newMessages","length","shift","useEffect","mounted","io","process","emit","on","val","obj","currentUsers","filter","user","includes","disconnect","current","scrollIntoView","behavior","style","maxHeight","map","index","ref","join","usersTyping","placeholder","marginRight","App","Provider","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6edf2812.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const DetailsContext = createContext<any>(null);\r\n","import { useState, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { DetailsContext } from \"./DetailsContext\";\r\n\r\nconst RoomInput = () => {\r\n  const [localUsername, setLocalUsername] = useState<string>(\"\");\r\n  const [localRoomCode, setLocalRoomCode] = useState<string>(\"\");\r\n\r\n  const [username, setUsername] = useContext(DetailsContext).usernames;\r\n  const [roomCode, setRoomCode] = useContext(DetailsContext).room;\r\n  const history = useHistory();\r\n\r\n  function joinRoom() {\r\n    setUsername(localUsername);\r\n    setRoomCode(localRoomCode);\r\n    history.push(\"/room\");\r\n  }\r\n\r\n  return (\r\n    <form>\r\n      <h1>Chat room</h1>\r\n      <div className=\"form-group\">\r\n        <label className=\"\">Username</label>\r\n        <input\r\n          className=\"form-control\"\r\n          type=\"text\"\r\n          value={localUsername}\r\n          onChange={(e) => setLocalUsername(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"form-group mt-2\">\r\n        <label className=\"\">Room Code</label>\r\n        <input\r\n          className=\"form-control\"\r\n          type=\"text\"\r\n          value={localRoomCode}\r\n          onChange={(e) => setLocalRoomCode(e.target.value)}\r\n        />\r\n      </div>\r\n      <button onClick={joinRoom} className=\"btn btn-primary mt-2\">\r\n        Join room\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default RoomInput;\r\n","import { MessageObject } from \"./Room\";\r\n\r\ninterface Props {\r\n  message: MessageObject;\r\n}\r\nconst Message = ({ message }: Props) => {\r\n  function body() {\r\n    if (\"status\" in message) {\r\n      return (\r\n        <div className=\"my-1 rounded py-1 px-2\">\r\n          <div className=\"d-flex justify-content-center\">\r\n            <small>\r\n              {message.username} {message.status}\r\n            </small>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"border border-secondary my-1 rounded py-1 px-2\">\r\n        <div className=\"d-flex justify-content-between\">\r\n          <small>{message.username}</small>\r\n          <small>\r\n            {new Date(parseInt(message.time))\r\n              .toLocaleTimeString(\"en-AU\")\r\n              .toString()}\r\n          </small>\r\n        </div>\r\n        <h6>{message.content}</h6>\r\n      </div>\r\n    );\r\n  }\r\n  return body();\r\n};\r\nexport default Message;\r\n","import io from \"socket.io-client\";\r\nimport { useState, useEffect, useContext, useRef } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { DetailsContext } from \"./DetailsContext\";\r\nimport Message from \"./Message\";\r\n\r\nconst SOCKET_SERVER: any = process.env.REACT_APP_SOCKET_SERVER;\r\n\r\nexport interface MessageObject {\r\n  content?: string;\r\n  username: string;\r\n  time: string;\r\n  status?: string;\r\n}\r\n\r\nconst Room = () => {\r\n  const [username, setUsername] = useContext(DetailsContext).usernames;\r\n  const [roomCode, setRoomCode] = useContext(DetailsContext).room;\r\n  const [messages, setMessages] = useState<MessageObject[]>([]);\r\n  const [message, setMessage] = useState<string>(\"\");\r\n  const [socket, setSocket] = useState<any>(null);\r\n  const [typingUsers, setTypingUsers] = useState<string[]>([]);\r\n  const history = useHistory();\r\n  const emptyDiv: any = useRef(null);\r\n\r\n  /** Adds a message */\r\n  function addMessage(message: MessageObject) {\r\n    setMessages((currentMessages) => {\r\n      const newMessages = [...currentMessages];\r\n      if (newMessages.length > 9) {\r\n        newMessages.shift();\r\n      }\r\n\r\n      newMessages.push(message);\r\n      return newMessages;\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    const socket = io(SOCKET_SERVER);\r\n    setSocket(socket);\r\n    if (username === \"\" || roomCode === \"\") {\r\n      history.push(\"/\");\r\n    }\r\n\r\n    if (mounted) {\r\n      socket.emit(\"joinRoom\", { username: username, roomCode: roomCode });\r\n\r\n      // whenever new user joins\r\n      socket.on(\"joinedRoom\", (val) => {\r\n        // console.log(val);\r\n        addMessage({ ...val, status: \"has joined the room\" });\r\n      });\r\n\r\n      socket.on(\"message\", (message) => {\r\n        // console.log(message);\r\n        addMessage(message);\r\n      });\r\n\r\n      socket.on(\"disconnected\", (message) => {\r\n        // console.log(message);\r\n        addMessage({ ...message, status: \"has left the room\" });\r\n      });\r\n\r\n      socket.on(\"typingEnded\", (obj) => {\r\n        // addMessage({ ...obj, status: \"is typing...\" });\r\n        setTypingUsers((currentUsers) => {\r\n          const newUsers = [...currentUsers];\r\n          return newUsers.filter((user) => user !== obj.username);\r\n        });\r\n        // console.log(\"ended\");\r\n      });\r\n\r\n      socket.on(\"typingStarted\", (obj) => {\r\n        // console.log(message);\r\n        // console.log(obj);\r\n        setTypingUsers((currentUsers: string[]) => {\r\n          if (!currentUsers.includes(obj.username)) {\r\n            return [...currentUsers, obj.username];\r\n          }\r\n          return currentUsers;\r\n        });\r\n      });\r\n    }\r\n    return () => {\r\n      mounted = false;\r\n      socket.disconnect();\r\n    };\r\n  }, [username, roomCode]);\r\n\r\n  useEffect(() => {\r\n    emptyDiv.current.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [messages]);\r\n\r\n  function sendMessage() {\r\n    setMessage(\"\");\r\n    socket.emit(\"message\", {\r\n      content: message,\r\n      username: username,\r\n    });\r\n  }\r\n\r\n  function typing() {\r\n    socket.emit(\"typing\", { username: username });\r\n  }\r\n\r\n  function usersTyping() {\r\n    if (typingUsers.length === 0) {\r\n      return;\r\n    }\r\n\r\n    if (typingUsers.length === 1) {\r\n      return <small>{typingUsers.toString()} is typing...</small>;\r\n    }\r\n\r\n    return <small>{typingUsers.join(\", \")} are typing...</small>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"d-flex flex-column h-75 container\">\r\n      <h1 className=\"row\">Chat room</h1>\r\n      <div className=\"row overflow-auto\" style={{ maxHeight: \"70vh\" }}>\r\n        {messages.map((message, index) => (\r\n          <Message key={index} message={message} />\r\n        ))}\r\n        <div ref={emptyDiv}></div>\r\n      </div>\r\n      <div className=\"fixed-bottom mb-5 container\">\r\n        <div className=\"text-center\">{usersTyping()}</div>\r\n        <form className=\"form-group d-flex\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Type something...\"\r\n            style={{ marginRight: \"15px\" }}\r\n            value={message}\r\n            onChange={(e) => {\r\n              typing();\r\n              setMessage(e.target.value);\r\n            }}\r\n          />\r\n          <button\r\n            className=\"btn btn-primary\"\r\n            type=\"submit\"\r\n            onClick={sendMessage}\r\n          >\r\n            Submit\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Room;\r\n","import { useState } from \"react\";\nimport RoomInput from \"./RoomInput\";\nimport Room from \"./Room\";\nimport { DetailsContext } from \"./DetailsContext\";\nimport { HashRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nfunction App() {\n  const [username, setUsername] = useState<string>(\"\");\n  const [roomCode, setRoomCode] = useState<string>(\"\");\n\n  return (\n    <div className=\"App container pt-5\">\n      <Router>\n        <DetailsContext.Provider\n          value={{\n            usernames: [username, setUsername],\n            room: [roomCode, setRoomCode],\n          }}\n        >\n          <Switch>\n            <Route path=\"/room\">\n              <Room />\n            </Route>\n            <Route path=\"/\">\n              <RoomInput />\n            </Route>\n          </Switch>\n        </DetailsContext.Provider>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}